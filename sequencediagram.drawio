<mxfile host="Electron" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) draw.io/24.7.17 Chrome/128.0.6613.36 Electron/32.0.1 Safari/537.36" version="24.7.17">
  <diagram id="C5RBs43oDa-KdzZeNtuy" name="Page-1">
    <mxGraphModel dx="864" dy="508" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="WIyWlLk6GJQsqaUBKTNV-1" parent="WIyWlLk6GJQsqaUBKTNV-0" />
        <mxCell id="3x8UJmTgnlKSGWPpAz4r-0" value="&lt;h3&gt;&lt;strong&gt;Sequence Diagram Explanation for Online Shopping System&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;A &lt;strong&gt;sequence diagram&lt;/strong&gt; models the flow of interactions between objects in a specific scenario, capturing how they interact with one another in a particular use case. It shows the sequence of messages exchanged between actors and system components over time.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Purpose:&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;For the &lt;strong&gt;Online Shopping System&lt;/strong&gt;, the sequence diagram illustrates how customers interact with the system to perform various tasks such as logging in, browsing items, purchasing products, and how admins manage orders.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Actors:&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Customer&lt;/strong&gt;: A user (new or registered) who wants to log in, browse items, make purchases, and make payments.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Admin&lt;/strong&gt;: A user with elevated privileges who manages the system, including order management and item updates.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;System&lt;/strong&gt;: The online shopping platform that handles customer and admin interactions.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;strong&gt;Key Components:&lt;/strong&gt;&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;Actors&lt;/strong&gt;: Represented by lifelines (Customer, Admin).&lt;/li&gt;&lt;li&gt;&lt;strong&gt;System Objects&lt;/strong&gt;: Include &lt;code&gt;LoginHandler&lt;/code&gt;, &lt;code&gt;ItemCatalog&lt;/code&gt;, &lt;code&gt;ShoppingCart&lt;/code&gt;, &lt;code&gt;PaymentProcessor&lt;/code&gt;, and &lt;code&gt;OrderManager&lt;/code&gt;.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Messages&lt;/strong&gt;: These are interactions that show the flow of communication between the actors and system components, such as &lt;code&gt;login()&lt;/code&gt;, &lt;code&gt;viewItems()&lt;/code&gt;, &lt;code&gt;addItemToCart()&lt;/code&gt;, &lt;code&gt;makePayment()&lt;/code&gt;, and &lt;code&gt;manageOrder()&lt;/code&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;Example Sequence Diagram: Online Shopping System&lt;/strong&gt;&lt;/h3&gt;&lt;h4&gt;&lt;strong&gt;Scenario 1: Customer Login&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Customer&lt;/strong&gt; initiates the &lt;strong&gt;login&lt;/strong&gt; action by entering their credentials.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;System&lt;/strong&gt; (LoginHandler) verifies the username and password.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;System&lt;/strong&gt; sends back a confirmation to the customer, allowing access.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Interactions in the diagram:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Customer -&amp;gt; LoginHandler&lt;/code&gt;: &lt;code&gt;login(username, password)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;LoginHandler -&amp;gt; Database&lt;/code&gt;: &lt;code&gt;verifyCredentials()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Database -&amp;gt; LoginHandler&lt;/code&gt;: &lt;code&gt;returnResult()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;LoginHandler -&amp;gt; Customer&lt;/code&gt;: &lt;code&gt;loginSuccess()&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;strong&gt;Scenario 2: Browse Items&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;Once logged in, the &lt;strong&gt;Customer&lt;/strong&gt; selects to view items.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;System&lt;/strong&gt; (ItemCatalog) retrieves a list of items from the database.&lt;/li&gt;&lt;li&gt;The items are displayed to the customer.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Interactions:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Customer -&amp;gt; ItemCatalog&lt;/code&gt;: &lt;code&gt;viewItems()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ItemCatalog -&amp;gt; Database&lt;/code&gt;: &lt;code&gt;retrieveItems()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Database -&amp;gt; ItemCatalog&lt;/code&gt;: &lt;code&gt;itemsList()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ItemCatalog -&amp;gt; Customer&lt;/code&gt;: &lt;code&gt;displayItems()&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;strong&gt;Scenario 3: Purchase Item&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;The &lt;strong&gt;Customer&lt;/strong&gt; adds selected items to the shopping cart.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;ShoppingCart&lt;/strong&gt; system updates the list of items.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;Customer&lt;/strong&gt; proceeds to checkout.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;PaymentProcessor&lt;/strong&gt; processes the payment based on the selected payment method.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Interactions:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Customer -&amp;gt; ShoppingCart&lt;/code&gt;: &lt;code&gt;addItemToCart(item)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;ShoppingCart -&amp;gt; Database&lt;/code&gt;: &lt;code&gt;updateCart()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Customer -&amp;gt; PaymentProcessor&lt;/code&gt;: &lt;code&gt;makePayment(paymentDetails)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;PaymentProcessor -&amp;gt; Database&lt;/code&gt;: &lt;code&gt;processPayment()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;PaymentProcessor -&amp;gt; Customer&lt;/code&gt;: &lt;code&gt;paymentSuccess()&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;&lt;strong&gt;Scenario 4: Admin Manages Orders&lt;/strong&gt;&lt;/h4&gt;&lt;ol&gt;&lt;li&gt;The &lt;strong&gt;Admin&lt;/strong&gt; logs in similarly to a customer.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;Admin&lt;/strong&gt; selects an order to process.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;OrderManager&lt;/strong&gt; retrieves the order details from the database.&lt;/li&gt;&lt;li&gt;The &lt;strong&gt;Admin&lt;/strong&gt; updates the order status (e.g., &quot;processed&quot; or &quot;shipped&quot;).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Interactions:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;Admin -&amp;gt; LoginHandler&lt;/code&gt;: &lt;code&gt;login(username, password)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;LoginHandler -&amp;gt; Admin&lt;/code&gt;: &lt;code&gt;loginSuccess()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Admin -&amp;gt; OrderManager&lt;/code&gt;: &lt;code&gt;manageOrder(orderId)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;OrderManager -&amp;gt; Database&lt;/code&gt;: &lt;code&gt;retrieveOrder(orderId)&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Database -&amp;gt; OrderManager&lt;/code&gt;: &lt;code&gt;returnOrderDetails()&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;Admin -&amp;gt; OrderManager&lt;/code&gt;: &lt;code&gt;updateOrderStatus(status)&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;&lt;hr&gt;&lt;h3&gt;&lt;strong&gt;Detailed Breakdown of the Main Use Case Flow:&lt;/strong&gt;&lt;/h3&gt;&lt;ol&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Login Use Case&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The customer inputs credentials.&lt;/li&gt;&lt;li&gt;The system verifies the credentials and grants access if successful.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;View Items Use Case&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The customer sends a request to view the catalog.&lt;/li&gt;&lt;li&gt;The system fetches and displays the list of items available for purchase.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Purchase Items Use Case&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The customer adds selected items to their shopping cart.&lt;/li&gt;&lt;li&gt;The system updates the cart and calculates the total.&lt;/li&gt;&lt;li&gt;The customer proceeds to checkout and makes a payment using a preferred payment method.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;&lt;p&gt;&lt;strong&gt;Admin Manage Orders Use Case&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The admin logs in and accesses the order management panel.&lt;/li&gt;&lt;li&gt;The admin can view, update, or process orders, such as changing the status or canceling an order.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="WIyWlLk6GJQsqaUBKTNV-1">
          <mxGeometry x="180" y="80" width="560" height="1700" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
